import { ActionRowBuilder, ButtonBuilder, ButtonStyle, SlashCommandBuilder, EmbedBuilder } from "discord.js";
import UserController from "../../controller/UserController.js";
import { getJSONData } from "../../utils.js";

export default {
  data: new SlashCommandBuilder()
    .setName("shop")
    .setDescription("–ü–æ–∫—É–ø–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –∑–∞ –∫–æ–∏–Ω—ã"),

  async execute(interaction) {
    const products = [
      { name: "–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å", description: "–†–æ–ª–∏ —Å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã–º —Å—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è", emoji: "‚≠ê" },
      { name: "–õ–∏—á–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞", description: "–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª", emoji: "üé§" },
    ];

    try {
      let coins = await UserController.getBalanceById(interaction.user.id);

      const shopEmbed = new EmbedBuilder()
        .setTitle(`–ú–∞–≥–∞–∑–∏–Ω —Ç–æ–≤–∞—Ä–æ–≤ ${interaction.member.guild.name}`)
        .setThumbnail(interaction.guild.iconURL())
        .setColor(2829617)

      products.map(({ name, description, emoji }) => {
        shopEmbed.addFields({ name: `${emoji} ‚Äî **${name}**`, value: description })
      });

      shopEmbed.addFields({ name: ":dollar: –ë–∞–ª–∞–Ω—Å", value: `${coins}  :coin:`} )

      const buttons = products.map(({ name, emoji, isDisable }) => {
        return new ButtonBuilder()
          .setCustomId(name)
          .setLabel(name)
          .setStyle(ButtonStyle.Primary)
          .setEmoji(emoji)
          .setDisabled(isDisable ? isDisable : false)
      });
      
      const row = new ActionRowBuilder().addComponents(buttons);
      const reply = await interaction.reply({ embeds: [shopEmbed], components: [row] });

      const filter = (i) => i.user.id === interaction.user.id;
      const collector = reply.createMessageComponentCollector({ filter, time: 3_600 * 1_000 });

      collector.on("collect", async (buttonInteraction) => {
        const { customId } = buttonInteraction;

        const { customRolePrice, privateChannelPrice, voiceChannelsCategoryId } = getJSONData("globalVariables.json");
        coins = await UserController.getBalanceById(interaction.user.id);

        const messageTemplates  = {
          "–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å": `${interaction.user}, **–∫–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å** –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–æ–ª—å, –¥–ª—è –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–∞–º–∏ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç, –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∏–∫–æ–Ω–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—å—Ç–µ—Å—å, —á—Ç–æ **–Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏** —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º –∏ **–Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã—Ö –∏–ª–∏ –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π**. –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **–º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∫–∞—Å—Ç–æ–º–Ω—É—é —Ä–æ–ª—å.**\n\n**–í–∞—à –±–∞–ª–∞–Ω—Å: ${coins}  :coin:**\n–Å—ë –º–æ–∂–Ω–∞ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥–æ–π \`\`/role create\`\``,
          "–õ–∏—á–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞": `${interaction.user}, **–ª–∏—á–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞** –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é <#${voiceChannelsCategoryId}> —Å–æ —Å–≤–æ–∏–º –ª–∏—á–Ω—ã–º –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º. –í—ã –º–æ–∂–µ—Ç–µ –∏–º **—É–ø—Ä–∞–≤–ª—è—Ç—å: –ø–µ—Ä–µ–∏–º–∏–Ω–æ–≤—ã–≤–∞—Ç—å, —Å–∫—Ä—ã–≤–∞—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å, —É–¥–∞–ª–∏—Ç—å, –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–¥–∞—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π** - –≤—Å–µ —ç—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π **/voice configure**. –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **–º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –ª–∏—á–Ω—É—é –∫–æ–º–Ω–∞—Ç—É.**\n\n**–í–∞—à –±–∞–ª–∞–Ω—Å: ${coins}  :coin:**\n–Å—ë –º–æ–∂–Ω–∞ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥–æ–π \`\`/voice buy\`\``
        };

        const prices = {
          "–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å": customRolePrice,
          "–õ–∏—á–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞": privateChannelPrice,
        };

        const isCanBuy = coins >= prices[customId];

        const replyEmbed = new EmbedBuilder()
          .setTitle(customId)
          .setDescription(messageTemplates[customId])
          .setThumbnail(interaction.user.displayAvatarURL())
          .setFooter({ text: !isCanBuy ? "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏" : null })
          .setColor(2829617)

        try {
          switch(customId) {
            case "–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å": {
              return await buttonInteraction.reply({ embeds: [replyEmbed], ephemeral: true });
            }

            case "–õ–∏—á–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞": {
              return await buttonInteraction.reply({ embeds: [replyEmbed], ephemeral: true });
            }
          }
        } catch(err) {
          console.error("Error in shop command(button interaction):", err.message);
        }
      });
    } catch(err) {
      console.log("Error in shop command:", err.message);
    }
  }
}